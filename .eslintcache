[{"/home/tullio/Desktop/lavoro/React/msgredux/src/index.js":"1","/home/tullio/Desktop/lavoro/React/msgredux/src/App.js":"2","/home/tullio/Desktop/lavoro/React/msgredux/src/reportWebVitals.js":"3","/home/tullio/Desktop/lavoro/React/msgredux/src/store.js":"4","/home/tullio/Desktop/lavoro/React/msgredux/src/components/auth/Signup.js":"5","/home/tullio/Desktop/lavoro/React/msgredux/src/components/auth/Login.js":"6","/home/tullio/Desktop/lavoro/React/msgredux/src/reducers/index.js":"7","/home/tullio/Desktop/lavoro/React/msgredux/src/actions/authActions.js":"8","/home/tullio/Desktop/lavoro/React/msgredux/src/reducers/authReducers.js":"9","/home/tullio/Desktop/lavoro/React/msgredux/src/actions/types.js":"10","/home/tullio/Desktop/lavoro/React/msgredux/src/firebase.js":"11","/home/tullio/Desktop/lavoro/React/msgredux/src/components/Dashboard.js":"12","/home/tullio/Desktop/lavoro/React/msgredux/src/components/PrivateRoute.js":"13","/home/tullio/Desktop/lavoro/React/msgredux/src/components/frontpage/Chats.js":"14","/home/tullio/Desktop/lavoro/React/msgredux/src/components/frontpage/Friends.js":"15","/home/tullio/Desktop/lavoro/React/msgredux/src/components/frontpage/Settings.js":"16"},{"size":448,"mtime":1609627324459,"results":"17","hashOfConfig":"18"},{"size":635,"mtime":1609427409276,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":1609364937583,"results":"20","hashOfConfig":"18"},{"size":419,"mtime":1609425002264,"results":"21","hashOfConfig":"18"},{"size":3855,"mtime":1609672138511,"results":"22","hashOfConfig":"18"},{"size":2424,"mtime":1609671845834,"results":"23","hashOfConfig":"18"},{"size":143,"mtime":1609424097251,"results":"24","hashOfConfig":"18"},{"size":1111,"mtime":1609431334164,"results":"25","hashOfConfig":"18"},{"size":717,"mtime":1609424790599,"results":"26","hashOfConfig":"18"},{"size":133,"mtime":1609424595825,"results":"27","hashOfConfig":"18"},{"size":535,"mtime":1609674315399,"results":"28","hashOfConfig":"18"},{"size":567,"mtime":1609621764342,"results":"29","hashOfConfig":"18"},{"size":484,"mtime":1609419814355,"results":"30","hashOfConfig":"18"},{"size":5529,"mtime":1609681750976,"results":"31","hashOfConfig":"18"},{"size":6686,"mtime":1609681743428,"results":"32","hashOfConfig":"18"},{"size":3369,"mtime":1609671000263,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1ei4e90",{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"36"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"36"},"/home/tullio/Desktop/lavoro/React/msgredux/src/index.js",[],["73","74"],"/home/tullio/Desktop/lavoro/React/msgredux/src/App.js",["75"],"import './App.css';\nimport { BrowserRouter as Router, Switch, Route} from 'react-router-dom'\nimport { Redirect } from 'react-router-dom'\nimport SignUp from './components/auth/Signup'\nimport Login from './components/auth/Login'\nimport Dashboard from './components/Dashboard'\nimport PrivateRoute from './components/PrivateRoute'\n\nconst App = () => {\n\n  return (\n      <Router>\n        <Switch>\n          <PrivateRoute exact path =\"/\" component = {Dashboard}/>\n          <Route path = \"/signup\" component = {SignUp} />\n          <Route path = \"/login\" component = {Login} />\n        </Switch>\n      </Router>\n  );\n}\n\n\nexport default App;\n","/home/tullio/Desktop/lavoro/React/msgredux/src/reportWebVitals.js",[],"/home/tullio/Desktop/lavoro/React/msgredux/src/store.js",[],"/home/tullio/Desktop/lavoro/React/msgredux/src/components/auth/Signup.js",["76"],"import React, { useRef, useState } from 'react'\nimport { Link, useHistory } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { signup } from '../../actions/authActions'\nimport { useEffect } from 'react'\nimport{ useSelector } from 'react-redux' \nimport firebase from \"firebase/app\";\nimport \"firebase/database\";\n\nfunction SignUp(props) {\n    const emailRef = useRef()\n    const passwordRef = useRef()\n    const usernameRef = useRef()\n    const passwordConfirmRef = useRef()\n    const [error, setError] = useState('')\n    const [loading, setLoading] = useState(false)\n    const history = useHistory()\n    const [usernames, setUsernames] = useState([])\n    const currentUser = useSelector(state=>state.auth.user)\n\n    useEffect(()=>{\n        retrieveUsernames()\n        if(currentUser){\n            history.push('/')\n        }\n\n    },[currentUser])\n    \n    function retrieveUsernames(){\n        var users = firebase.database().ref('users/');\n        users.on('value', (snapshot) => {\n            let results = []\n            for(var key in snapshot.val()){\n                if(snapshot.val().hasOwnProperty(key)){\n                    results.push(snapshot.val()[key].username)\n                }\n            }\n            setUsernames(usernames => results)\n        })\n    }\n\n    async function handleSubmit(e){\n        e.preventDefault()\n        if (passwordRef.current.value !== passwordConfirmRef.current.value){\n            return setError('Password do not match')\n        } else if (usernames.includes(usernameRef.current.value)) {\n            return setError('Username already taken')\n        }\n        try{\n            setError('')\n            setLoading(true)\n            props.signup({\n                email: emailRef.current.value,\n                password: passwordRef.current.value,\n                username: usernameRef.current.value\n            })\n     \n        } catch {\n            setError('Failed to create an account')\n        }\n        setLoading(false)\n    }\n\n        return (\n            <div className=\"App container d-flex align-items-center justify-content-center\">\n                <div className =\"w-100\" style = {{maxWidth: \"500px\"}}>\n                    <div className = \"authComp card mt-5\">\n                         <h2 className = \"text-center mb-4\">Sign Up</h2>\n                         {error && <div className = \"alert alert-danger\">{error}</div>}\n                         <form onSubmit = {handleSubmit}>\n                             <label htmlFor = \"email\" className=\"form-label\">Email</label>\n                             <input ref = {emailRef} className=\"form-control\" type=\"email\" id=\"email\" required/>\n   \n                             <label htmlFor = \"username\" className=\"form-label\">Userame</label>\n                             <input ref = {usernameRef} className=\"form-control\" type=\"text\" id=\"username\" required/>\n   \n                             <label htmlFor = \"password\" className=\"form-label\">Password</label>\n                             <input ref = {passwordRef} className=\"form-control\" type=\"password\" id=\"password\" required/>\n   \n                             <label htmlFor = \"passwordConfirm\" className=\"form-label\">Password Confirmation</label>\n                             <input ref = {passwordConfirmRef} className=\"form-control\" type=\"password\" id=\"passwordConfirm\" required/>\n   \n                             <button disabled = {loading} className=\"btn mt-3 w-100 authBtn\">SIGN UP</button>\n                         </form>\n                     </div>\n                     <div className = \"authScritte w-100 text-center mt-2\">\n                         Already have an account? <Link className='link' to = \"/login\">Login</Link>\n                     </div>\n                </div>\n            </div>\n           \n        )\n    }\n\n\nexport default connect(null, { signup })(SignUp)","/home/tullio/Desktop/lavoro/React/msgredux/src/components/auth/Login.js",["77"],"import React, { useRef, useState } from 'react'\nimport { Link, useHistory } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { login } from '../../actions/authActions'\nimport { useEffect } from 'react'\nimport { useSelector } from 'react-redux' \n\n\nfunction Login(props) {\n    const emailRef = useRef()\n    const passwordRef = useRef()\n    const [error, setError] = useState('')\n    const [loading, setLoading] = useState(false)\n    const history = useHistory()\n    const currentUser = useSelector(state=>state.auth.user)\n\n    useEffect(()=>{\n        if(currentUser){\n            history.push('/')\n        }\n\n    },[currentUser])\n    \n    async function handleSubmit(e){\n        e.preventDefault()\n\n        try{\n            setError('')\n            setLoading(true)\n            await props.login({\n                email: emailRef.current.value,\n                password: passwordRef.current.value    \n            })\n            \n        } catch {\n            setError('Failed to sign in')\n        }\n        setLoading(false)\n    }\n\n        return (\n            <div className=\"App container d-flex align-items-center justify-content-center \">\n                <div className =\"w-100\" style = {{maxWidth: \"500px\"}}>\n                    <div className = \"card mt-5 authComp\">\n                         <h2 className = \"text-center mb-4\">Login</h2>\n                         {error && <div className = \"alert alert-danger\">{error}</div>}\n                         <form onSubmit = {handleSubmit}>\n                             <label htmlFor = \"email\" className=\"form-label\">Email</label>\n                             <input ref = {emailRef} className=\"form-control\" type=\"email\" id=\"email\" required/>\n   \n                             <label htmlFor = \"password\" className=\"form-label\">Password</label>\n                             <input ref = {passwordRef} className=\"form-control\" type=\"password\" id=\"password\" required/>\n   \n                             <button disabled = {loading} className=\"btn mt-3 w-100 authBtn\">LOGIN</button>\n                         </form>\n                     </div>\n                     <div className = \"authScritte w-100 text-center mt-2\">\n                         Need an Account? <Link className='link' to = \"/signup\">SignUp</Link>\n                     </div>\n                </div>\n            </div>\n           \n        )\n    }\n\n\nexport default connect(null, { login })(Login)","/home/tullio/Desktop/lavoro/React/msgredux/src/reducers/index.js",[],"/home/tullio/Desktop/lavoro/React/msgredux/src/actions/authActions.js",[],"/home/tullio/Desktop/lavoro/React/msgredux/src/reducers/authReducers.js",["78"],"import { LOGIN, SIGNUP, LOGOUT, CHECK_USER } from '../actions/types';\n\nconst initialState = {\n    user: {}\n}\n\nexport default function (state = initialState, action) {\n    switch(action.type){\n        case LOGIN:\n            return{\n                ...state,\n                user: action.payload\n            }\n        case LOGOUT:\n            return{\n                ...state,\n                user: action.payload\n            }\n        case SIGNUP:\n            return{\n                ...state,\n                user: action.payload\n            }\n        case CHECK_USER:\n            return{\n                ...state,\n                user: action.payload\n            }\n        default:\n            return state;\n    }\n}","/home/tullio/Desktop/lavoro/React/msgredux/src/actions/types.js",[],"/home/tullio/Desktop/lavoro/React/msgredux/src/firebase.js",[],"/home/tullio/Desktop/lavoro/React/msgredux/src/components/Dashboard.js",["79"],"import React from 'react'\nimport { useEffect } from 'react'\nimport { checkUser } from '../actions/authActions'\nimport { connect } from 'react-redux'\nimport Chats from './frontpage/Chats'\nimport Friends from './frontpage/Friends'\nimport Settings from './frontpage/Settings'\n\nfunction Dashboard(props) {\n    useEffect(()=>{\n        props.checkUser()\n    },[])\n    \n    return (\n        <div className='visual row p-2 pl-4'>\n            <Friends/>\n            <Chats/>\n            <Settings/>\n        </div>\n    )\n}\n\nexport default  connect(null, {checkUser})(Dashboard)","/home/tullio/Desktop/lavoro/React/msgredux/src/components/PrivateRoute.js",[],"/home/tullio/Desktop/lavoro/React/msgredux/src/components/frontpage/Chats.js",["80","81"],"/home/tullio/Desktop/lavoro/React/msgredux/src/components/frontpage/Friends.js",["82","83","84","85","86","87"],"/home/tullio/Desktop/lavoro/React/msgredux/src/components/frontpage/Settings.js",["88"],"import React from 'react'\nimport { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { logout } from '../../actions/authActions'\nimport { useHistory } from 'react-router-dom'\nimport { useSelector } from 'react-redux' \nimport firebase from \"firebase/app\";\nimport \"firebase/database\";\n\n function Settings(props) {\n    const history = useHistory()\n    const [username, setUsername] = useState(''); //username current user\n    const [friendRequests, setFriendRequests] = useState([])\n    const currentUser = useSelector(state=>state.auth.user)\n\n    useEffect(()=>{\n        if(currentUser){\n            retrieveUsername()\n            retrievRequests()\n        }\n    },[currentUser])\n\n    function retrieveUsername(){\n        var userData = firebase.database().ref('users/' + currentUser.uid)\n        userData.on('value', (snapshot) => {\n            if(snapshot.val()){\n                setUsername(snapshot.val().username)\n            }\n        })\n    }\n\n    async function handleLogout(e){\n        e.preventDefault()\n        await props.logout()\n        history.push('/login')\n    }\n\n    function retrievRequests(){\n        var requests = firebase.database().ref('users/' + currentUser.uid + '/requests');\n        requests.on('value', (snapshot)=>{\n            let req = []\n            for(var key in snapshot.val()){\n                var objReq = {\n                    rid: key, //request id\n                    username: snapshot.val()[key].username,\n                    urid: snapshot.val()[key].userAsking  //user requesting id\n                }\n                req.push(objReq)\n            }\n            setFriendRequests(friendRequests => req)\n        })\n    }\n\n    function handleAddFriend(props){\n        var friendsList = firebase.database().ref('users/'+ currentUser.uid+'/friends');\n        friendsList.push({friendID: props.urid, friendUsername: props.username}) //aggiunge l'amico che ha fatto la richiesta agli amici del current\n        var requesterFriendsList = firebase.database().ref('users/'+ props.urid+'/friends');\n        requesterFriendsList.push({friendID: currentUser.uid, friendUsername: username})\n        var req = firebase.database().ref('users/'+currentUser.uid+'/requests/'+props.rid)\n        req.remove()\n        window.location.reload();\n    }\n\n\n    function handleDeclineFriend(props){\n        var req = firebase.database().ref('users/'+currentUser.uid+'/requests/'+props.rid)\n        req.remove()\n        window.location.reload();\n    }\n\n    return (\n        <div className='col chats m-1 '>\n            <h3 className='mt-2'><i className=\"far fa-user fa-sm\"></i> {username}</h3>\n            <h5>Friend requests: {friendRequests.length}</h5>\n            \n            {friendRequests.map(friendRequest => {\n                return (\n                    <div>\n                        {friendRequest.username}\n                        <i onClick={()=>handleAddFriend(friendRequest)} className='mx-2 my-3 fas fa-check fa-lg clickable greenIcon'></i>\n                        <i onClick={()=>handleDeclineFriend(friendRequest)} className='mx-2 my-3 fas fa-times fa-lg clickable redIcon'></i>\n                    </div>\n                )\n            })}\n\n            <button className='btn redBtn w-100 mt-3' onClick={handleLogout}>Logout</button>\n        </div>\n    )\n}\n\nexport default connect(null, {logout})(Settings)",{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":3,"column":10,"nodeType":"95","messageId":"96","endLine":3,"endColumn":18},{"ruleId":"97","severity":1,"message":"98","line":27,"column":7,"nodeType":"99","endLine":27,"endColumn":20,"suggestions":"100"},{"ruleId":"97","severity":1,"message":"98","line":22,"column":7,"nodeType":"99","endLine":22,"endColumn":20,"suggestions":"101"},{"ruleId":"102","severity":1,"message":"103","line":7,"column":1,"nodeType":"104","endLine":32,"endColumn":2},{"ruleId":"97","severity":1,"message":"105","line":12,"column":7,"nodeType":"99","endLine":12,"endColumn":9,"suggestions":"106"},{"ruleId":"97","severity":1,"message":"107","line":22,"column":7,"nodeType":"99","endLine":22,"endColumn":32,"suggestions":"108"},{"ruleId":"109","severity":1,"message":"110","line":143,"column":81,"nodeType":"111","endLine":143,"endColumn":92},{"ruleId":"97","severity":1,"message":"112","line":21,"column":7,"nodeType":"99","endLine":21,"endColumn":28,"suggestions":"113"},{"ruleId":"114","severity":1,"message":"115","line":116,"column":31,"nodeType":"116","messageId":"117","endLine":116,"endColumn":33},{"ruleId":"114","severity":1,"message":"118","line":128,"column":49,"nodeType":"116","messageId":"119","endLine":128,"endColumn":51},{"ruleId":"120","severity":1,"message":"121","line":143,"column":29,"nodeType":"95","messageId":"122","endLine":143,"endColumn":32},{"ruleId":"123","severity":1,"message":"124","line":145,"column":40,"nodeType":"116","messageId":"125","endLine":150,"endColumn":26},{"ruleId":"114","severity":1,"message":"115","line":145,"column":46,"nodeType":"116","messageId":"117","endLine":145,"endColumn":48},{"ruleId":"97","severity":1,"message":"126","line":21,"column":7,"nodeType":"99","endLine":21,"endColumn":20,"suggestions":"127"},"no-native-reassign",["128"],"no-negated-in-lhs",["129"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["130"],["131"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["132"],"React Hook useEffect has missing dependencies: 'retrieveCurrentUserChats', 'retrieveMessages', and 'retrieveUsername'. Either include them or remove the dependency array.",["133"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","React Hook useEffect has missing dependencies: 'handleSearch', 'retrieveChats', 'retrieveFriends', and 'retrieveUsername'. Either include them or remove the dependency array.",["134"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","no-redeclare","'key' is already defined.","redeclared","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'isFriend'.","unsafeRefs","React Hook useEffect has missing dependencies: 'retrievRequests' and 'retrieveUsername'. Either include them or remove the dependency array.",["135"],"no-global-assign","no-unsafe-negation",{"desc":"136","fix":"137"},{"desc":"136","fix":"138"},{"desc":"139","fix":"140"},{"desc":"141","fix":"142"},{"desc":"143","fix":"144"},{"desc":"145","fix":"146"},"Update the dependencies array to be: [currentUser, history]",{"range":"147","text":"148"},{"range":"149","text":"148"},"Update the dependencies array to be: [props]",{"range":"150","text":"151"},"Update the dependencies array to be: [currentUser, isChatting, retrieveCurrentUserChats, retrieveMessages, retrieveUsername]",{"range":"152","text":"153"},"Update the dependencies array to be: [search, currentUser, retrieveUsername, retrieveFriends, retrieveChats, handleSearch]",{"range":"154","text":"155"},"Update the dependencies array to be: [currentUser, retrievRequests, retrieveUsername]",{"range":"156","text":"157"},[850,863],"[currentUser, history]",[633,646],[354,356],"[props]",[722,747],"[currentUser, isChatting, retrieveCurrentUserChats, retrieveMessages, retrieveUsername]",[729,750],"[search, currentUser, retrieveUsername, retrieveFriends, retrieveChats, handleSearch]",[693,706],"[currentUser, retrievRequests, retrieveUsername]"]